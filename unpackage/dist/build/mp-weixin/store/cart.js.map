{"version":3,"file":"cart.js","sources":["../../../../../store/cart.js"],"sourcesContent":["export default {\r\n\tnamespaced: true,\r\n\tstate: () => ({\r\n\t\t// 购物车数组 \r\n\t\t// 包含 goods_id goods_name goods_price goods_count goods_small_logo goods_state\r\n\t\tcart: JSON.parse(uni.getStorageSync('cart') || '[]')\r\n\t}),\r\n\tgetters: {\r\n\t\t// 购物车商品总数\r\n\t\ttotal(state) {\r\n\t\t\treturn state.cart.length\r\n\t\t},\r\n\t\t// 所有商品的总数量\r\n\t\tallCount(state) {\r\n\t\t\treturn state.cart.reduce((prev, goods) => prev + goods.goods_count, 0)\r\n\t\t},\r\n\t\t// 已选中商品的总数量\r\n\t\tcheckedCount(state) {\r\n\t\t\treturn state.cart.filter(t => t.goods_state).reduce((total, item) => total + item.goods_count, 0)\r\n\t\t},\r\n\t\t// 已选中商品的总价格\r\n\t\tcheckedGoodsAmount(state) {\r\n\t\t\treturn state.cart.filter(t => t.goods_state)\r\n\t\t\t\t.reduce((total, item) => total + (item.goods_count * item.goods_price), 0)\r\n\t\t\t\t.toFixed(2)\r\n\t\t}\r\n\t},\r\n\tmutations: {\r\n\t\t// 添加商品到购物车\r\n\t\taddToCart(state, goods) {\r\n\t\t\tconst findCart = state.cart.find(t => t.goods_id === goods.goods_id)\r\n\t\t\tif (!findCart) {\r\n\t\t\t\tstate.cart.push(goods)\r\n\t\t\t} else {\r\n\t\t\t\tfindCart.goods_count++\r\n\t\t\t}\r\n\t\t\tthis.commit('m_cart/saveToStorage')\r\n\t\t},\r\n\t\t// 本地持久化存储购物车信息\r\n\t\tsaveToStorage(state) {\r\n\t\t\tuni.setStorageSync('cart', JSON.stringify(state.cart))\r\n\t\t},\r\n\t\t// 更新购物车中商品的状态\r\n\t\tupdateGoodsState(state, goods) {\r\n\t\t\tconst findResult = state.cart.find(t => t.goods_id === goods.goods_id)\r\n\t\t\tif (findResult) {\r\n\t\t\t\tfindResult.goods_state = goods.goods_state\r\n\t\t\t\tthis.commit('m_cart/saveToStorage')\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 更新商品数量\r\n\t\tupdateGoodsCount(state, goods) {\r\n\t\t\tconst findResult = state.cart.find(t => t.goods_id === goods.goods_id)\r\n\t\t\tif (findResult) {\r\n\t\t\t\tfindResult.goods_count = goods.goods_count\r\n\t\t\t\tthis.commit('m_cart/saveToStorage')\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeleteCartGoods(state, goods_id) {\r\n\t\t\tstate.cart = state.cart.filter(t => t.goods_id !== goods_id)\r\n\t\t\tthis.commit('m_cart/saveToStorage')\r\n\t\t},\r\n\t\t// 更新购物车所有商品的状态\r\n\t\tupdateAllGoodsState(state, checked) {\r\n\t\t\tstate.cart.forEach(t => t.goods_state = checked)\r\n\t\t\tthis.commit('m_cart/saveToStorage')\r\n\t\t}\r\n\t}\r\n}"],"names":["moduleCart","namespaced","state","cart","JSON","parse","uni","getStorageSync","getters","total","length","allCount","reduce","prev","goods","goods_count","checkedCount","filter","t","goods_state","item","checkedGoodsAmount","goods_price","toFixed","mutations","addToCart","findCart","find","goods_id","push","this","commit","saveToStorage","index","setStorageSync","stringify","updateGoodsState","findResult","updateGoodsCount","deleteCartGoods","updateAllGoodsState","checked","forEach"],"mappings":"oDAAeA,EAAA,CACdC,YAAY,EACZC,MAAO,KAAO,CAGbC,KAAMC,KAAKC,MAAMC,EAAAA,MAAIC,eAAe,SAAW,QAEhDC,QAAS,CAERC,MAAMP,GACEA,EAAMC,KAAKO,OAGnBC,SAAST,GACDA,EAAMC,KAAKS,QAAO,CAACC,EAAMC,IAAUD,EAAOC,EAAMC,aAAa,GAGrEC,aAAad,GACLA,EAAMC,KAAKc,QAAOC,GAAKA,EAAEC,cAAaP,QAAO,CAACH,EAAOW,IAASX,EAAQW,EAAKL,aAAa,GAGhGM,mBAAmBnB,GACXA,EAAMC,KAAKc,WAAYC,EAAEC,cAC9BP,QAAO,CAACH,EAAOW,IAASX,EAASW,EAAKL,YAAcK,EAAKE,aAAc,GACvEC,QAAQ,IAGZC,UAAW,CAEVC,UAAUvB,EAAOY,GACV,MAAAY,EAAWxB,EAAMC,KAAKwB,SAAUT,EAAEU,WAAad,EAAMc,WACtDF,EAGKA,EAAAX,cAFHb,EAAAC,KAAK0B,KAAKf,GAIjBgB,KAAKC,OAAO,uBACZ,EAEDC,cAAc9B,GACbI,EAAG2B,MAACC,eAAe,OAAQ9B,KAAK+B,UAAUjC,EAAMC,MAChD,EAEDiC,iBAAiBlC,EAAOY,GACjB,MAAAuB,EAAanC,EAAMC,KAAKwB,SAAUT,EAAEU,WAAad,EAAMc,WACzDS,IACHA,EAAWlB,YAAcL,EAAMK,YAC/BW,KAAKC,OAAO,wBAEb,EAEDO,iBAAiBpC,EAAOY,GACjB,MAAAuB,EAAanC,EAAMC,KAAKwB,SAAUT,EAAEU,WAAad,EAAMc,WACzDS,IACHA,EAAWtB,YAAcD,EAAMC,YAC/Be,KAAKC,OAAO,wBAEb,EACDQ,gBAAgBrC,EAAO0B,GACtB1B,EAAMC,KAAOD,EAAMC,KAAKc,QAAYC,GAAAA,EAAEU,WAAaA,IACnDE,KAAKC,OAAO,uBACZ,EAEDS,oBAAoBtC,EAAOuC,GAC1BvC,EAAMC,KAAKuC,SAAaxB,GAAAA,EAAEC,YAAcsB,IACxCX,KAAKC,OAAO,uBACZ"}